
Proc Main

  Dim sFilterStart: String        := ''
  Dim sFilterEnd: String          := ''
  Dim iFilterPos: Int             := 0
  Dim sKonfigData: String         := ''
  Dim sFileExtension: str         := GetMessageVar('sFileExtension')
  Dim bIsZaehler: Boolean         := False
  Dim sMonat: String              := ''
  Dim iSchleifeSum: Int           := 0
  
  Dim aArchiv: Array              := []
  Dim bArcErg: Boolean            := False
  Dim sHourArr: String            := ''
  Dim sTempPositionOld: String    := ''
  Dim sTempPositionNew: String    := ''
  Dim sYearString: String         := ''
  Dim rSummeArchiv: Real          := 0.0
//  Dim rSummeArchiv02: Real        := 0.0
  
  Dim aRes: Array                 := []
  Dim bExistData: Boolean         := True

  Dim rTempArcValue: Real

  Dim rWertBetween: real          := 0.0

  Datum := aPagePara[1]
  
  Append Page, '  <div id="TouchArchiv" class="w3-hide">true</div>'

  // Test eines Filters für die Zeit
  // aPagePara[3] := '14:05:33-18:05:20'

  StrPos iFilterPos, '-', aPagePara[3]
  
	// Filter vorhanden
  if (iFilterPos > 0) Then
    StrCopy sFilterStart, aPagePara[3], 1, iFilterPos-1
    StrCopy sFilterEnd, aPagePara[3], iFilterPos+1, Len(aPagePara[3])
  EndIf



	// Ansicht Events ********************
  if (aPagePara[5] = '3') or (aPagePara[5] = '1' and (isDigWord(ihandle) or isDigBit(ihandle))) Then

    Dim sSQL: String                := ''
    Dim aPrioColorList:array        := StrToArray(GetMessageVar('PrioColorList'))

    Dim sTimeStampStart: String
    Dim sTimeStampEnd: String
    Dim sFileEnd: String

    Dim sSecondArc:String

    Dim rTimeBtwStart: real
    Dim rTimeBtwEnd: real


    FormatDateTime(sFileEnd, 'yyyymmdd', strtodate(datum))
    FormatDateTime(sTimeStampStart, 'yyyy-mm-dd', strtodate(datum)-1)
    FormatDateTime(sTimeStampEnd, 'yyyy-mm-dd', strtodate(datum))

    sSecondArc := aPagePara[2]  

    // wenn nur Meldegruppe "DIGITAL-ARCHIV"
    if (len(sSecondArc) < 1) then
      sSecondArc := 'DIGITAL-ARCHIV_'
    endif



    if (ExistFile(ProPath + '\MGruppen\D_Event_' + sFileEnd + sFileExtension) and ExistFile(ProPath + '\MGruppen\' + sSecondArc + sFileEnd + sFileExtension)) then
    //'

      if (iVal(aPagePara[3]) > 1) Then
        sSQL := "Select TOP " + aPagePara[3] + " DEvent.Datum_Uhrzeit,DEvent.Satz_Nr,K.Name,K.Anlage,K.Kommentar,"
      else
        sSQL := "Select TOP 100 DEvent.Datum_Uhrzeit,DEvent.Satz_Nr,K.Name,K.Anlage,K.Kommentar,"
      EndIf

      sSQL := sSQL + "DEvent.Handle,DEvent.AltPrio,DEvent.NeuPrio,"
      sSQL := sSQL + 'M.Bearbeitet,DEvent."Text" '
      sSQL := sSQL + "From D_Event_" + sFileEnd + " as DEvent "
      sSQL := sSQL + "Inner Join ProAlias.Konfig K On K.Handle = DEvent.Handle "
      sSQL := sSQL + 'Inner Join "' + sSecondArc + sFileEnd + '" M On M.Satz_Nr = DEvent.Satz_Nr '
  
      if (isHandle(ihandle)) Then
        sSQL := sSQL + "Where DEvent.Typ <> 2 AND DEvent.Handle = " + shandle + " "
      else
        sSQL := sSQL + "Where DEvent.Typ <> 2 AND DEvent.Handle < 10000000 "
      EndIf
		
      sSQL := sSQL + "AND DEvent.Datum_Uhrzeit >= TimeStamp '" + sTimeStampStart + " 22:00:00.000' "
      sSQL := sSQL + "AND DEvent.Datum_Uhrzeit < TimeStamp '" + sTimeStampEnd + " 22:00:00.000'"
      sSQL := sSQL + " order by DEvent.Datum_Uhrzeit DESC"

      Sql(bOk, aRes, MGRAlias, sSQL)

    else
    endif

    // keine Werte vorhanden
    if (Count(aRes) < 2) Then
      bExistData := false
    endif    

    Call Vorlagen.HeadSinglePanelPage false, true, false

    Append Page, ' <div class="CenterThings" style="height:50px">'

    Append Page, '  <div id="IDEventSearch" onfocus="this.style.width=`65%`;" class="w3-card-2 w3-round-xlarge" style="width:110px; margin-right:auto; margin-left:10px;">'
    Append Page, '     <input autocomplete="off" onblur="IDEventSearch.style.transition=`none`; IDEventSearch.style.width=`110px`;" onfocus="IDEventSearch.style.transition=`all 0.5s ease-out`; IDEventSearch.style.width=`60%`;" id="myInputEvents" class="w3-text-sand w3-round-xlarge InputNormal" style="border-bottom:0px; height:36px;" type="search" placeholder="search..."></input>'
    Append Page, '   </div>'

    Append Page, '  <div class="CenterThings w3-card-2 w3-round-xlarge" style="margin-right:10px; height:36px; width:110px;" onclick="ajax_default(`#IDelementglobal`, `ajax_selectgroup`); modalklick(`IDelementglobal`)"><div class="la la-list w3-large"></div></div>'

    Append Page, ' </div>'


    Append Page, ' <div id="myList" class="EventList">'


    for iSchleife = 2 to Count(aRes)

      // Berechnungen TimeBetween
      if (isHandle(ihandle)) Then

        rTimeBtwStart := UtcDateTimeToLocalDateTime(rVal(aRes[iSchleife, 1]))
        rTimeBtwEnd   := UtcDateTimeToLocalDateTime(rVal(aRes[iSchleife - 1, 1]))

        // letzter Eintag des Tages und HEUTE
        if (iSchleife = 2) and (datetostr(strtodate(Datum)) = datetostr(date)) then
          rTimeBtwEnd := now
        endif

        // letzter Eintag des Tages NICHT HEUTE
        if (iSchleife = 2) and not (datetostr(strtodate(Datum)) = datetostr(date)) then
          rTimeBtwEnd := ival(UtcDateTimeToLocalDateTime(rVal(aRes[iSchleife, 1]))) + 1
        endif

        rWertBetween  := (rTimeBtwEnd - rTimeBtwStart) * 100
          
      endif


      if (isHandle(ihandle)) Then
        Append Page, '        <button class="el00">'
      else
        Append Page, '        <button class="el00" onclick="AjaxHandle=`' + aRes[iSchleife, 6] + '`; ajax_callarchiv(`#idmain`);">'
      Endif

      Append Page, '          <div class="el01">' + TimeToStr(UtcDateTimeToLocalDateTime(rVal(aRes[iSchleife, 1]))) + '</div>'
      Append Page, '          <div class="el03">' + aRes[iSchleife, 5] + '</div>'
      Append Page, '          <div class="el04" style="background-image: linear-gradient(35deg, ' + aPrioColorList[ival(aRes[iSchleife, 7])+1,1] +  ' -100%,rgba(48,48,48,0.2) 75%, rgba(48,48,48,0.2) 20%, ' 
      Append Page, '         ' +  aPrioColorList[ival(aRes[iSchleife, 8])+1,1] + ' 80%)">' + PrioToString(iVal(aRes[iSchleife, 8])) + '</div>'

      if (isHandle(ihandle)) Then
        Append Page, '          <div class="el05" style="background-image: linear-gradient(90deg, #299FFF ' + sval(rWertBetween) + '%, black ' + sval(rWertBetween) + '%)"></div>'
      Endif

      Append Page, '        </button>'
      
    Next

    Append Page, ' </div>'

    Call Vorlagen.FooterSinglePanelPage



    Append Page, '    <script>'

    Append Page, '      $(`#IDAjaxDate`).html(("0" + datum.getDate()).slice(-2) + `.` + ("0" + (datum.getMonth()+1)).slice(-2) + `<br>` + datum.getFullYear());'
    Append Page, '      $("#ArchivBack").attr("onclick","datum.setDate(datum.getDate()-1); ajax_callarchiv(`#idmain`);");'

    // Wenn Datum in der Zukunft
    if (date - strtodate(datum) > 0.0) then 
      Append Page, '      $("#ArchivNext").attr("onclick","datum.setDate(datum.getDate()+1); ajax_callarchiv(`#idmain`);");'
    else
      Append Page, '      $("#ArchivNext").attr("onclick","");'
    endif

    Append Page, '      $("#btnResetArcfilter").attr("onclick","ajax_arcmodal(`#IDelementglobal`, `ajax_selectcountevents`);");'

    if (isHandle(ihandle)) Then
      Append Page, '        $("#btnResetArcfilter").addClass("w3-hide");'
      Append Page, '        $("#btnResetArcChanceViewtoChart").removeClass("w3-hide");'
    else
      Append Page, '        $("#btnResetArcfilter").removeClass("w3-hide");'
    endif

    Append Page, '      $(document).ready(function(){'
    Append Page, '        $("#myInputEvents").on("input", function() {'
    Append Page, '          var value = $(this).val().toLowerCase();'
    Append Page, '          $("#myList button").filter(function() {'
    Append Page, '            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)'
    Append Page, '          });'
    Append Page, '        });'
    Append Page, '      });'

    Append Page, '    </script>'

  Endif
















  // Ansicht Archivchart 
  if (ival(aPagePara[5]) > 49) Then

    Dim aHandleList:      array
    Dim aArchiv2:         array

    Dim iCountHandles:int
    Dim iSchleifeMonth:int

    Dim sCheckDate1: String         := ''

    Dim sWertDate1: string
    Dim sWertDate2: string
    Dim sWertDateLast1: string
    Dim sWertDateLast2: string
    Dim sWertSave: String
    Dim sArcData: String
    Dim sSchleifeDate:String

    Dim sColConfig:     String
    Global Dim sRGBArc: String
    Dim sRGBTMP:        String

    Dim sArcToJS:       String
    Dim sArcToJSYear:   String
    Dim sArcToJSCol:    String

    Dim aMonthVal:arr
    Dim iSchleifeDay:int

    Dim sDatePart:      String



    Call Vorlagen.HeadSinglePanelPage false, true, true

    GetKonfigData sKonfigData, ihandle, 'Flags'
    bIsZaehler := isBit14(iVal(sKonfigData))



    // DP ist ein Zähler
    if (bIsZaehler = True) Then

 
      // Array mit allen Handles bauen
      aHandleList[1,1] := shandle
      aHandleList[1,2] := datum


      // Zweites Datum ist vorhanden
      if (aPagePara[3] <> '') Then
        Append aHandleList, shandle
        aHandleList[count(aHandleList), 2] := aPagePara[3]
      endif


      Append Page, '    <canvas class="" style="" id="IDMainChartJS"></canvas>'
      Append Page, '    <script>'
      Append Page, '      dataChart = document.getElementById(`IDMainChartJS`).getContext(`2d`);'
        
      Append Page, '      myChart = new Chart(dataChart, {'
      Append Page, '        type: `bar`,'
      Append Page, '        data: {'




      if (ival(aPagePara[5]) = 55) then
      else
        Append Page, '          labels: [`Jan`, `Feb`, `Mär`, `Apr`, `Mai`, `Jun`, `Jul`, `Aug`, `Sep`, `Okt`, `Nov`, `Dez`],'
      endif

      Append Page, '          datasets: ['


      // Schleife für jeden einzelnen Handle
      for iCountHandles=1 to count(aHandleList)

        sArcData := ''
        rSummeArchiv := 0.0

        sSchleifeDate := aHandleList[iCountHandles, 2]

        Append Page, '            {'

        if (ival(aPagePara[5]) = 55) then
          Append Page, '              label: `' + sval(DateMonth(StrToDate(sSchleifeDate))) + ' / ' + sval(DateYear(StrToDate(sSchleifeDate))) + '`,'
        else
          Append Page, '              label: `' + sval(DateYear(StrToDate(sSchleifeDate)))  + '`,'
        endif


 
        // Monatsarchiv
        if (ival(aPagePara[5]) = 55) then

          GetArcValues aMonthVal, ival(aHandleList[iCountHandles,1]), rVal(StrToDate(sSchleifeDate)), 11

          for iSchleifeDay = 1 to count(aMonthVal)
  
            if (ival(aMonthVal[iSchleifeDay]) < 1) then
              sArcData := sArcData + '{x:' + sval(iSchleifeDay) + ', y:0},'
            else
              sArcData := sArcData + '{x:' + sval(iSchleifeDay) + ', y:' + aMonthVal[iSchleifeDay] + '},'
            endif

          next

        else

          for iSchleifeMonth = 1 to 12

            // check no future data
            if ((iSchleifeMonth > Month) and (DateYear(StrToDate(sSchleifeDate)) = Year)) Then
              sWertDate1 := '0'
              sWertDate2 := '0'
            else
 
              // aktueller Monat?
              if ((iSchleifeMonth = Month) and (DateYear(StrToDate(sSchleifeDate)) = Year)) Then
                sCheckDate1 := sVal(DateDay(StrToDate(sSchleifeDate))) + '.' + sVal(iSchleifeMonth) + '.' + sVal(DateYear(StrToDate(sSchleifeDate)))
                GetArcValues aArchiv, ihandle, StrToDate(sCheckDate1), 7
                sWertDate1 := aArchiv[day,1]
              else
                sCheckDate1 := '1.' + sVal(iSchleifeMonth) + '.' + sVal(DateYear(StrToDate(sSchleifeDate)))
                GetArcValues aArchiv, ihandle, StrToDate(sCheckDate1), 7
                sWertDate1 := aArchiv[count(aArchiv),1]
              endIf
          

              if (iSchleifeMonth > 1) then 
                sWertDate2 := sWertSave
              else
                GetArcValues aArchiv2, ihandle, StrToDate(sCheckDate1), 6
                sWertDate2 := aArchiv2[1,1]
              endif

              sWertSave := aArchiv[count(aArchiv)]

            endIf

            rSummeArchiv := rSummeArchiv + (rval(sWertDate1) - rVal(sWertDate2))
          
            sArcData := sArcData + sval(iVal(sWertDate1) - iVal(sWertDate2)) + ','

          next

        endif


        Append Page, '              data: [' + sArcData +'],'

//        if (iCountHandles=1) Then
//
//          call vorlagen.ColConfigtoHTML aHandleList[1,1], iCountHandles       
//
//          Append Page, '                            backgroundColor: `rgba(' + sRGBArc + ', 0.8)`,'
//          Append Page, '                            borderColor: `rgba(' + sRGBArc + ', 1)`,'
//        
//        endif

        Append Page, '              borderWidth: 0'
        Append Page, '            },'


        sArcToJS := sArcToJS + sval(rSummeArchiv) + ','
        sArcToJSYear := sArcToJSYear + sval(DateYear(StrToDate(sSchleifeDate))) + ','
        sArcToJSCol := sArcToJSCol + '`rgba(' +  sRGBArc + ')`,'

      next


      Append Page, '          ]'  // END datasets
      Append Page, '        },'  // END data
      Append Page, '        options: {'


      if (ival(aPagePara[5]) <> 55) then

        Append Page, '          onClick: (event, elements) => {'

        Append Page, '            if (elements.length > 0) {'
        Append Page, '              const clickedElementIndex = elements[0].index;'

        Append Page, '              $("#btnResetArcarcchance").removeClass("w3-hide")'

        Append Page, '              datumTMP = new Date (myChart.data.datasets[elements[0].datasetIndex].label, clickedElementIndex, 1)'      

        Append Page, '              $("#btnResetArcarcchance").attr("onclick","datum=datumTMP; AjaxArchivMode = `55`;AjaxFilter=``; ajax_callarchiv(`#idmain`); ");'
        Append Page, '            } else {'
        Append Page, '              $("#btnResetArcarcchance").addClass("w3-hide")'
        Append Page, '            }'

        Append Page, '          },'  // END onClick

      endif

      Append Page, '          responsive: true,'
      Append Page, '          maintainAspectRatio: false,'
      Append Page, '          scales: {'


      Append Page, '            x: {'

      if (ival(aPagePara[5]) = 55) then

        Append Page, '              type: `linear`,'
        Append Page, '              min: 1,'
        Append Page, '              max: 31,'

      endif


      Append Page, '              ticks: {'
      Append Page, '                color: `#C0C0C0`,'              
      Append Page, '                ticks: {'
      Append Page, '                  stepSize: 1'
      Append Page, '                }'

      Append Page, '              }'
      Append Page, '            },'  // END x


      Append Page, '            y: {'
      Append Page, '              beginAtZero: true,'
      Append Page, '              ticks: {'
      Append Page, '                color: `#C0C0C0`,'
      Append Page, '              }'
      Append Page, '            }'  // END y

      Append Page, '          },'  // END scales


      Append Page, '          plugins: {'

      Append Page, '            legend: {'
      Append Page, '              position: `top`,'


      Append Page, '              labels: {'
      Append Page, '                color: `#F5F5DC`,'
      Append Page, '              },'
      Append Page, '            },'  // END legend

      Append Page, '            title: {'
      Append Page, '              display: false,'
      Append Page, '              text: `Jahresübersicht`'
      Append Page, '            }'
      Append Page, '          }'  // END plugin

      Append Page, '        }'  // END Options

      Append Page, '      });'  // END Chart



      Append Page, '      AjaxSummeArchiv = [' + sArcToJS + '];'
      Append Page, '      AjaxSummeYear = [' + sArcToJSYear + '];'
      Append Page, '      AjaxSummeCol = [' + sArcToJSCol + '];'


      if (ival(aPagePara[5]) = 55) then

        Append Page, '      $("#ArchivBack").attr("onclick","datum.setMonth(datum.getMonth() - 1); AjaxArchivMode = `55`; ajax_callarchiv(`#idmain`);");'
        Append Page, '      $("#ArchivNext").attr("onclick","datum.setMonth(datum.getMonth() + 1); AjaxArchivMode = `55`; ajax_callarchiv(`#idmain`);");'
        Append Page, '      $("#btnResetArcarcyearzaehler").removeClass("w3-hide");'
        Append Page, '      $("#IDAjaxDate").html(`<i class=""></i>`);'
        
      else

        Append Page, '      $("#ArchivBack").attr("onclick","datum.setDate(datum.getDate()-365); ajax_callarchiv(`#idmain`);");'
        Append Page, '      $("#ArchivNext").attr("onclick","datum.setDate(datum.getDate()+365); ajax_callarchiv(`#idmain`);");'
        Append Page, '      $("#IDAjaxDate").html(`<i class="w3-large las la-chart-pie"></i>`);'

      endif

      Append Page, '      $("#btnResetArcCalenderPlus").removeClass("w3-hide");'

      // zweiter Wert ist vorhanden
      if (aPagePara[3] <> '') Then
        Append Page, '      $("#btnResetArcCalenderPlus").removeClass("w3-text-white");'
        Append Page, '      $("#btnResetArcCalenderPlus").addClass("w3-text-blue");'
        Append Page, '      $("#btnResetArcCalenderPlus").attr("onclick","AjaxFilter=``; ajax_callarchiv(`#idmain`);");'
      else
        Append Page, '      $("#btnResetArcCalenderPlus").attr("onclick","ajax_arcmodal(`#IDelementglobal`, `ajax_selectyear`);");'
        Append Page, '      $("#btnResetArcCalenderPlus").removeClass("w3-text-blue");'
      endif	

      Append Page, '    </script>'



















  
    // DP ist KEIN Zähler
    else

      Dim aKonfigDataPrio:  array := []
      Dim aSQLResult:       Array 

      Dim sTempMGRDate:   String
      Dim sSQL:           String
      Dim sArcDate:       String
      Dim sArcTime:       String

      Dim sFillArcDate:   String
      Dim sTension:       String := '0.0'
      Dim sStepped:       String := 'true' 

      Dim sBitPasPrio:    String

      Dim sBitMelPrio1:   String
      Dim sBitMelPrio2:   String
      Dim sBitMelPrio3:   String
      Dim sBitMelPrio4:   String            

      Dim iCountArcData:int

      // Array mit allen Handles bauen
      Split aHandleList, aPagePara[4], ';'
      Insert aHandleList, sHandle,1 

      FormatDateTime(sTempMGRDate, 'yyyymmdd', strtodatetime(Datum))

      // Kopf des CHARTs
      Append Page, '    <canvas class="" style="" id="IDMainChartJS"></canvas>'
      Append Page, '    <script>'

      Append Page, '      AjaxFilerStart = ``;'

      Append Page, '      dataChart = {'
      Append Page, '        datasets: ['


      for iCountHandles=1 to count(aHandleList)

        call vorlagen.ColConfigtoHTML aHandleList[iCountHandles,1], iCountHandles

//        logbook '--->   ' + sRGBArc

        // --> analoger Datenpunkt
        if (isAna(ival(aHandleList[iCountHandles]))) and (ExistFile(ProPath + '\Archiv\A_Event_' + sTempMGRDate + sFileExtension)) Then


          // Geglättetes Archiv
          if (isGroup(NameToHandle('VILLA-ARCHIV-CURVE'))) then

            sql bOK , aSQLResult, ProAlias, 'SELECT Handle FROM "VILLA-ARCHIV-CURVE" WHERE (Handle=' + aHandleList[iCountHandles] + ')'

            if (count(aSQLResult) > 1) then 
              sTension := '0.3'
              sStepped := 'false'
            else
              sTension := '0.0'
              sStepped := 'true'
            endif

          endif



          if (iFilterPos > 0) Then
            sSQL := 'SELECT DateTimeStr(LT("DateTime")), VAL FROM "A_Event_' + sTempMGRDate + '" where (Handle = %i) and ("DateTime" >= %x And "DateTime" <= %x)'
          else
            sSQL := 'SELECT DateTimeStr(LT("DateTime")), VAL FROM "A_Event_' + sTempMGRDate + '" where (Handle = %i)'
          endif
  
          SqlFormat sSQL, [ival(aHandleList[iCountHandles]), LocalDateTimeToUtcDateTime(StrToDateTime(Datum + ' ' + sFilterStart + ':00:00')), LocalDateTimeToUtcDateTime(StrToDateTime(Datum + ' '  + sFilterEnd + ':00:00'))]
          Sql bOK , aArchiv, ArcAlias, sSQL
          delete aArchiv, 1

          // wenn kein Filter gesetzt
          if (iFilterPos < 1) Then

            // wenn heute
            if (datetostr(strtodate(Datum)) = DateToStr(Date)) Then
              sFillArcDate := datestr + ' ' + timestr
            else
              sFillArcDate := Datum + ' 23:59:59'
            endif

            // noch eine entsprechende Zeile unten einfügen
            Append aArchiv, aArchiv[count(aArchiv)] 
            aArchiv[Count(aArchiv),1] := sFillArcDate
            aArchiv[Count(aArchiv),2] := aArchiv[Count(aArchiv) - 1,2]

          endif

        endif




        // --> BIT Datenpunkt
        if (isDigBit(ival(aHandleList[iCountHandles]))) and (ExistFile(ProPath + '\MGruppen\D_Event_' + sTempMGRDate + sFileExtension)) Then

          aKonfigDataPrio := GetKonfig(iHandle)

          sSQL := 'SELECT DateTimeStr(LT("Datum_Uhrzeit")), NeuPrio, AltPrio FROM "D_Event_' + sTempMGRDate + '" where (Handle = %i) order by Datum_Uhrzeit'
          SqlFormat sSQL, [ival(aHandleList[iCountHandles]), LocalDateTimeToUtcDateTime(StrToDateTime('03.01.2023 00:00:00')), LocalDateTimeToUtcDateTime(StrToDateTime('03.01.2023 23:00:00'))]
          Sql bOK , aArchiv, MGrAlias, sSQL

          Delete aArchiv, 1  

          
          // wenn heute
          if (datetostr(strtodate(Datum)) = DateToStr(Date)) Then
            sFillArcDate := datestr + ' ' + timestr
          else
            sFillArcDate := Datum + ' 23:59:59'
          endif          

          // noch eine entsprechende Zeile unten einfügen
          Append aArchiv, aArchiv[count(aArchiv)] 
          aArchiv[count(aArchiv), 1] := sFillArcDate
          aArchiv[count(aArchiv), 2] := aArchiv[(count(aArchiv)-1), 2]


          sBitPasPrio := aKonfigDataPrio.PassivPrio
          sBitMelPrio1 := aKonfigDataPrio.MeldePrio1


          for iCountArcData = 1 to Count(aArchiv)

            if (sBitPasPrio = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '0'
            endif

            if (sBitMelPrio1 = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '1'
            endif

          next

        Endif





        // --> Schaltbefehl
        if (isDigWord(ival(aHandleList[iCountHandles]))) and (ExistFile(ProPath + '\MGruppen\D_Event_' + sTempMGRDate + sFileExtension)) Then

          aKonfigDataPrio := GetKonfig(iHandle) 

          sSQL := 'SELECT DateTimeStr(LT("Datum_Uhrzeit")), NeuPrio, AltPrio FROM "D_Event_' + sTempMGRDate + '" where (Handle = %i) order by Datum_Uhrzeit'
          SqlFormat sSQL, [ival(aHandleList[iCountHandles]), LocalDateTimeToUtcDateTime(StrToDateTime('03.01.2023 00:00:00')), LocalDateTimeToUtcDateTime(StrToDateTime('03.01.2023 23:00:00'))]
          Sql bOK , aArchiv, MGrAlias, sSQL

          Delete aArchiv, 1  
          Delete aArchiv, 1  
          Delete aArchiv, 1  

          Insert aArchiv, Datum + ' 00:00:00',1 
          aArchiv[1,2] := aArchiv[2,3]

          

          // wenn heute
          if (datetostr(strtodate(Datum)) = DateToStr(Date)) Then
            sFillArcDate := datestr + ' ' + timestr
          else
            sFillArcDate := Datum + ' 23:59:59'
          endif          

          // noch eine entsprechende Zeile unten einfügen
          Append aArchiv, aArchiv[count(aArchiv)] 
          aArchiv[count(aArchiv), 1] := sFillArcDate
          aArchiv[count(aArchiv), 2] := aArchiv[(count(aArchiv)-1), 2]

          sBitPasPrio := aKonfigDataPrio.PassivPrio
          sBitMelPrio1 := aKonfigDataPrio.MeldePrio1
          sBitMelPrio2 := aKonfigDataPrio.MeldePrio2
          sBitMelPrio3 := aKonfigDataPrio.MeldePrio3
          sBitMelPrio4 := aKonfigDataPrio.MeldePrio4


          for iCountArcData = 1 to Count(aArchiv)

            if (sBitPasPrio = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '0'
            endif

            if (sBitMelPrio1 = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '1'
            endif

            if (sBitMelPrio2 = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '2'
            endif

            if (sBitMelPrio3 = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '3'
            endif

            if (sBitMelPrio4 = aArchiv[iCountArcData,2]) then 
              aArchiv[iCountArcData,2] := '4'
            endif

          next

        endif






        // Begin einzelner Graphen
        Append Page, '          {'
        Append Page, '            label: `' + GetComment(ival(aHandleList[iCountHandles])) + '`,'
        Append Page, '            data: ['

        for iCountArcData = 1 to Count(aArchiv)

          FormatDateTime(sArcDate, 'yyyy-mm-dd', strtodatetime(aArchiv[iCountArcData,1]))
          FormatDateTime(sArcTime, 'hh:nn:ss', strtodatetime(aArchiv[iCountArcData,1]))

          Append Page, '              { x: `' + sArcDate + 'T' + sArcTime + '`, y: ' + aArchiv[iCountArcData,2] + ' },'

        next

        Append Page, '            ],'















// Grenzwerte
      //  Append Page, '            segment: {'
      //  Append Page, '              borderColor: ctx => {'
      //  Append Page, '                yValue = ctx.p1.parsed.y;'
      //  Append Page, '                return yValue < 32.0 ? `rgba(' + sRGBArc + ', 1)` : `red` ;'
      //  Append Page, '             }'
      //  Append Page, '            },'















        Append Page, '            borderColor: `rgba(' + sRGBArc + ', 1)`,'
        Append Page, '            backgroundColor: `rgba(' + sRGBArc + ', 0.2)`,'
        Append Page, '            fill: false,'
        Append Page, '            borderWidth: 1,'
        Append Page, '            tension: ' + sTension + ','
        Append Page, '            stepped:' + sStepped + ','
        Append Page, '            pointRadius: 1'
        Append Page, '          },'

      next

      Append Page, '        ]'
      Append Page, '      };'

      Append Page, '      config = {'
      Append Page, '        type: `line`,'

      Append Page, '        data: dataChart,'

      Append Page, '        options: {'
      Append Page, '          responsive: true,'
      Append Page, '          maintainAspectRatio: false,'

      Append Page, '          scales: {'
    
      Append Page, '            x: {'
      Append Page, '              type: `time`, // Setze den Typ der X-Achse auf `time`'
      Append Page, '              title: {'
      Append Page, '                display: false,'
      Append Page, '                text: `Uhrzeit`'
      Append Page, '              },'
      Append Page, '              time: {'
      Append Page, '                unit: `minute`, // Einheit für die Zeitachse'
      Append Page, '                tooltipFormat: `HH:mm:ss`,'
      Append Page, '                displayFormats: {'
      Append Page, '                  minute: `HH:mm` // Format für die Anzeige'
      Append Page, '                }'
      Append Page, '              },'  // End time

      Append Page, '              ticks: {'
      Append Page, '                color: `#C0C0C0`,'
      Append Page, '                autoSkip: true,'
      Append Page, '                maxTicksLimit: 10'
      Append Page, '              }'
      Append Page, '            },'  // End x

      Append Page, '            y: {'
      Append Page, '              title: {'
      Append Page, '                display: false,'
      Append Page, '                text: ` -- `'
      Append Page, '              },'
      Append Page, '              ticks: {'
      Append Page, '                color: `#C0C0C0`,'
      Append Page, '                beginAtZero: false,'

      if not (isAna(ival(aHandleList[iCountHandles]))) Then

        Append Page, '                stepSize: 1,'

        Append Page, '                callback: function(value, index, values) {'

        Append Page, '                  switch (value) {'
        Append Page, '                    case 0: return `' + PrioToString(ival(sBitPasPrio)) + '`; break;'
        Append Page, '                    case 1: return `' + PrioToString(ival(sBitMelPrio1)) + '`; break;'
        Append Page, '                    case 2: return `' + PrioToString(ival(sBitMelPrio2)) + '`; break;'
        Append Page, '                    case 3: return `' + PrioToString(ival(sBitMelPrio3)) + '`; break;'
        Append Page, '                    case 4: return `' + PrioToString(ival(sBitMelPrio4)) + '`; break;'
        Append Page, '                  }'
        Append Page, '                }'  // END Callback

      endif

      Append Page, '              },'  // END ticks
      Append Page, '            }'  // END Y AXIS
      Append Page, '          },'  // END SCALES
    
      Append Page, '          plugins: {'

      Append Page, '            zoom: {'
      Append Page, '              zoom: {'
      Append Page, '                wheel: {'
      Append Page, '                  enabled: true,'
      Append Page, '                },'

      Append Page, '                pinch: {'
      Append Page, '                  enabled: true'
      Append Page, '                },'

      Append Page, '                mode: `x`,'

      Append Page, '              }'
      Append Page, '            },'  // END zoom

      Append Page, '            legend: {'

      Append Page, '              labels: {'

      Append Page, '                boxHeight: 2,'
      Append Page, '                boxWidth: 15, // Breite der farbigen Box'
      Append Page, '                borderWidth: 0, // Entfernt den Rahmen um die Boxen'
      Append Page, '                color: `#EEE`, // Ändert die Schriftfarbe der Legende'

      Append Page, '                font: {'
      Append Page, '                  family: `Helvetica`, // Schriftart'
      Append Page, '                  size: 12, // Schriftgröße'
      Append Page, '                  style: `normal` // Schriftstil (normal, italic, bold, etc.)'
      Append Page, '                },'
      Append Page, '              },'
      Append Page, '            },'


      if not (isAna(ival(aHandleList[iCountHandles]))) Then

        Append Page, '            tooltip: {'
        Append Page, '              callbacks: {'
        Append Page, '                label: function(context) {'
        Append Page, '                  switch (context.parsed.y) {'
        Append Page, '                    case 0: return `' + PrioToString(ival(sBitPasPrio)) + '`;'
        Append Page, '                    case 1: return `' + PrioToString(ival(sBitMelPrio1)) + '`;'
        Append Page, '                    case 2: return `' + PrioToString(ival(sBitMelPrio2)) + '`;'
        Append Page, '                    case 3: return `' + PrioToString(ival(sBitMelPrio3)) + '`;'
        Append Page, '                    case 4: return `' + PrioToString(ival(sBitMelPrio4)) + '`;'
        Append Page, '                  }'
        Append Page, '                }'
        Append Page, '              }'
        Append Page, '            }'  // END tooltip

      EndIf

      Append Page, '          }'  // End plugins
      Append Page, '        }' // End options
      Append Page, '      };'  // End Config

      Append Page, '      ChartJS = new Chart('
      Append Page, '        document.getElementById(`IDMainChartJS`),'
      Append Page, '        config'
      Append Page, '      );'

      Append Page, '      function handleClick(event, chart) {'
      Append Page, '        const canvasPosition = Chart.helpers.getRelativePosition(event, chart);'
    
      Append Page, '        // Überprüfen, ob der Klick nahe der X-Achse ist + Toleranz'
      Append Page, '        if (canvasPosition.y > chart.chartArea.bottom - 20) {'
      Append Page, '          const xValue = chart.scales.x.getValueForPixel(canvasPosition.x);'
        
      Append Page, '          // Formatieren Sie das Datum für eine bessere Lesbarkeit'
      Append Page, '          const date = new Date(xValue);'
      Append Page, '          const formattedDate = date.toLocaleString(`de-DE`, { '
//    Append Page, '            year: `numeric`, '
//    Append Page, '            month: `2-digit`, '
//    Append Page, '            day: `2-digit`, '
      Append Page, '            hour: `2-digit`, '
      Append Page, '            minute: `2-digit`,' 
      Append Page, '            second: `2-digit` '
      Append Page, '          });'
        
      Append Page, '          if (AjaxFilerStart && AjaxFilerStart.length > 0) {'
      Append Page, '            // Wenn AjaxFilerStart bereits Daten enthält'
      Append Page, '            AjaxFilter = AjaxFilerStart + `-` + formattedDate;'
      Append Page, '            ajax_callarchiv(`#idmain`);'
      Append Page, '          } else {'
      Append Page, '            // Wenn AjaxFilerStart keine Daten enthält'
      Append Page, '            AjaxFilerStart = formattedDate;'
      Append Page, '          }'

      Append Page, '        }'
      Append Page, '      }'

      Append Page, '      // Event-Listener hinzufügen'
      Append Page, '      document.getElementById(`IDMainChartJS`).addEventListener(`click`, function(event) {'
      Append Page, '        handleClick(event, ChartJS);'
      Append Page, '      });'


      Append Page, '      AjaxSummeArchiv = [];'
      
      // Anpassungen Buttons unten
      Append Page, '      $("#btnResetArcChanceViewtoList").removeClass("w3-hide");'


      if (iFilterPos > 0) Then

        Append Page, '      $("#btnResetArcfilter").removeClass("w3-hide");'
        Append Page, '      $("#btnResetArcfilter").removeClass("w3-text-white");'
        Append Page, '      $("#btnResetArcfilter").addClass("w3-text-blue");'
        Append PAge, '      AjaxFilter = ``;'
        Append Page, '      $("#btnResetArcfilter").attr("onclick","ajax_callarchiv(`#idmain`);");'

      endif

      Append Page, '      $("#ArchivBack").attr("onclick","datum.setDate(datum.getDate()-1); ajax_callarchiv(`#idmain`);");'

      // Wenn Datum in der Zukunft
      if (date - strtodate(datum) > 0.0) then 
        Append Page, '      $("#ArchivNext").attr("onclick","datum.setDate(datum.getDate()+1); ajax_callarchiv(`#idmain`);");'
      else
        Append Page, '      $("#ArchivNext").attr("onclick","");'
      endif

      Append Page, '      $(`#IDAjaxDate`).html(("0" + datum.getDate()).slice(-2) + `.` + ("0" + (datum.getMonth()+1)).slice(-2) + `<br>` + datum.getFullYear());'
      Append Page, '    </script>'

    EndIf

  EndIf




  if (bExistData = False) then

    Append Page, '      <script>'
    Append Page, '        snackbar(`la la-binoculars`, `red`, `Keine Archive gefunden<br>' + Datum + ' `);'
    Append Page, '      </script>'
      
  Endif


EndProc

