
// Mode=   Wert als Text mit Einheit und Zustandsfarbe
// Mode=1  Bild zurück
// Mode=2  Progressbar zurück
// Mode=3  Slider zurück
// Mode=4  ProcessData
// Mode=5  Show/Hide Line
// Mode=8  Wert als Text
// Mode=9  Siri antwortet
// Mode=10 MessageVar wird zurückgegeben
// Mode=11 Anzahl der Störungen für Menü
// Mode=12 Sankey Diagram



Proc Main

  iHandle       := iVal((ReqVar.Handle))

  sMode         := sVal((ReqVar.sMode))
  sBild         := sVal((ReqVar.sBild))

  sCol00        := sVal((ReqVar.sCol00))
  sCol01        := sVal((ReqVar.sCol01))
  sCol02        := sVal((ReqVar.sCol02))

  sAnimate      := sVal((ReqVar.sAnimate))

  sColGLT       := 'A642B0'
  sColStoer     := 'CD0000'
  sColOffline   := '4D4D4D'

  bResultWeb    := False
  bNoIcon       := False

  Select sMode

    Case '1'

      sActPrio   := GetSwitchPrioText(iHandle)
      aKonfig := GetKonfig(iHandle)
      iFlag := iVal(aKonfig.Flags)
      bDGLT :=  isBit2(iFlag)
      iStoerPrio := GetActPrio(iHandle)

      GetProcessData(sConnect, iHandle, 'Enabled')

      sQuellColor := 'White'

      // Offline
      if (sConnect = 'FALSE') Then
        sQuellColor := '#' + sColOffline

      // Störung
      ElseIf (iStoerPrio > 63) Then
        sQuellColor := '#' + sColStoer

      // GLT (nicht dauer GLT)
      ElseIf (sActPrio = 'GLT') and (bDGLT = False) Then
        sQuellColor := '#' + sColGLT

      // Rest
      ElseIf (isDigWord(iHandle)) or (isDigBit(iHandle)) Then  
        sQuellColor := PrioToColor(GetActPrio(iHandle))
        sQuellColor := ColorToStr(iVal(sQuellColor))
 
        if (sQuellColor[1] = 'c') Then
          StrCopy sQuellColor, sQuellColor, 3, Len(sQuellColor)
        else
			
          if (sQuellColor[1] = '$') then
            StrCopy sQuellColor, sQuellColor, 4, Len(sQuellColor)
            StrCopy sColorTempHtml01, sQuellColor, Len(sQuellColor)-1, 2
            sColorTempHtml02 := sColorTempHtml01
            StrCopy sColorTempHtml01, sQuellColor, Len(sQuellColor)-3, 2
            sColorTempHtml02 := sColorTempHtml02 + sColorTempHtml01
            StrCopy sColorTempHtml01, sQuellColor, Len(sQuellColor)-5, 2
            sColorTempHtml02 := sColorTempHtml02 + sColorTempHtml01
            sQuellColor := '#' + sColorTempHtml02
          EndIf

        EndIf
      Endif



      if (sBild = 'liveicon') then
        sBildShow := '<img src="//www.wunderground.com/static/i/c/v4/' + GetRealActValueAsString(iHandle) + '.svg" style="width:18px;">'
        sBild := ''
      else
        sBildShow := ''
        sBild := 'la ' + sBild
      endif


      if (isHandle(iHandle)) Then

        // Schaltbefehl
        if (isDigWord(iHandle)) Then

          if (sAnimate = '1') and (GetActPosition(iHandle) > 0) Then
            sIsSpin := 'w3-spin'
          else
            sIsSpin := ''
          EndIf
  
          if (len(sCol00) = 1) and (sCol00 <> sval(GetActPosition(iHandle))) then
            sIsSpin := 'w3-hide'
          endif
  
          Append Page, '<div class="' + sBild + ' ' + sIsSpin + ' w3-large" style="color:' + sQuellColor + '">' + sBildShow + ' </div>'

        EndIf


        // Bit
        if (isDigBit(iHandle)) Then

          if (sAnimate = '1') and (GetActBit(iHandle) = True) Then
            sIsSpin := 'w3-spin'
          else
            sIsSpin := ''
          EndIf

          // Hide noch für BIT DPs rein machen

          //if (len(sCol00) = 1) and (sCol00 <> sval(GetActPosition(iHandle))) then
          //  sIsSpin := 'w3-hide'
          //endif

          Append Page, '<div class="' + sBild + ' ' + sIsSpin + ' w3-large" style="color:' + sQuellColor + '">' + sBildShow + '</div>'

       EndIf


        // Analog
        if (isAna(iHandle)) Then
          Append Page, '<div class="' + sBild + ' w3-large" style="color:' + sQuellColor + '">' + sBildShow + '</div>'
        EndIf

        bResultWeb := True

      EndIf







    Case '2'

      sActPrio   := GetSwitchPrioText(iHandle)
	    aKonfig    := GetKonfig(iHandle)
      iFlag      := iVal(aKonfig.Flags)
      bDGLT      := isBit2(iFlag)
      iStoerPrio := GetActPrio(iHandle)

      GetProcessData(sConnect, iHandle, 'Enabled')

      sActValue := sVal((GetRealActValue(iHandle) + GetMinValue(iHandle)) * (100 / (GetMaxValue(iHandle) - GetMinValue(iHandle))))

      if (sConnect = 'FALSE') Then

        Append Page, '    <div class="w3-border w3-border-dark-grey w3-round-large w3-card-2 w3-opacity-max" style="background-color:#' + sCol00 + '">'


      else

        if (iStoerPrio > 63) Then
          Append Page, '    <div class="w3-border w3-border-red w3-round-large w3-card-2" style="background-color:#' + sCol00 + '">'
        else

          // GLT (nicht dauer GLT)
          if (sActPrio = 'GLT') and (bDGLT = False)  Then
            Append Page, '    <div class="w3-border w3-border-purple w3-round-large w3-card-2" style="background-color:#' + sCol00 + '">'
          else
            Append Page, '    <div class="w3-border w3-border-dark-grey w3-round-large w3-card-2" style="background-color:#' + sCol00 + '">'
          EndIf

        EndIf

      EndIf

      if (sCol01='') then
        Append Page, '      <div class="w3-round-large" style="background-image: linear-gradient(90deg, #4876FF 0%, #cd3333 130%);height:12px;width:' + sActValue + '%">'
      else 
        Append Page, '      <div class="w3-round-large" style="background-color:#' + sCol01 + ';height:12px;width:' + sActValue + '%">'
      endif

      Append Page, '    </div>'
      bResultWeb := True







    Case '3'
  
      if (isHandle(iHandle)) then

        GetProcessData(sConnect, iHandle, 'Enabled')
   
        // wenn Meldegruppe vorhanden - dann Mode 4 (alte Konfig abfangen)
        if (scol01 = 'null') then scol01 = ''
        if (len(scol01) > 1) then scol02 = '4'

        // wenn Online oder Meldegruppe
        if (sConnect = 'TRUE') or (len(scol01) > 1) Then
          Append Page, '    <label class="switch">'
        else
          Append Page, '    <label class="switch w3-opacity-max">'
        EndIf


        // Mode 1 + 2
        if (scol02 = '1') or (scol02 = '2') then

          if (GetActPosition(ihandle) = 1) Then
            Append Page, '      <input type="checkbox" checked onclick="SendPost(this, ' + #39 + sBild + #39 + ', ' +#39 + sCol02 + #39 +', ' + #39 + sVal(iHandle) + #39 + '); this.name = `click off`">'
          else
            Append Page, '      <input type="checkbox" onclick="SendPost(this, ' + #39 + sBild + #39 + ', ' +#39 + sCol02 + #39 +', ' + #39 + sVal(iHandle) + #39 + '); this.name = `click on`">'
          endIf
        endif

        // Mode 3
        if (scol02 = '3')  then
          if (isBit12(GetBmpFlags(ihandle))) Then
            Append Page, '      <input type="checkbox" checked onclick="SendPost(this, `villa`, ' +#39 + '6' + #39 +', ' + #39 + sVal(iHandle) + #39 + '); this.name = `click 0`">'
          else
            Append Page, '      <input type="checkbox" onclick="SendPost(this, `villa`, ' +#39 + '6' + #39 +', ' + #39 + sVal(iHandle) + #39 + '); this.name = `click 1`">'
          endIf
        endif

        // Mode 4
        if (scol02 = '4')  then

          aGroupList := GetGroupList (NameToHandle(scol01))
          bIsInGroup = false

          for iSchleifeCheckGroup = 1 to count(aGroupList)
            if sval(ihandle) = aGroupList[iSchleifeCheckGroup] then bIsInGroup = true
          next

          if (bIsInGroup) Then
            Append Page, '      <input type="checkbox" checked onclick="SendPost(this, `' + sval(NameToHandle(scol01)) + '`, ' +#39 + '8' + #39 +', ' + #39 + sVal(iHandle) + #39 + '); this.name = `click 0`">'
          else
            Append Page, '      <input type="checkbox" onclick="SendPost(this, `' + sval(NameToHandle(scol01)) + '`, ' +#39 + '8' + #39 +', ' + #39 + sVal(iHandle) + #39 + '); this.name = `click 1`">'
          endIf

        endif

        Append Page, '      <span class="slider round"></span>'
        Append Page, '    </label>'
     
        bResultWeb := True
      endif






    



    Case '4'
		
      GetProcessData sDateTime, iHandle , sBild

      // Zeit Umwandeln in String
      if (sCol00 = '1') Then
        sDateTime := DateTimeToStr(rVal(rVal(sDateTime)))
      EndIf
		  
      Append Page, sDateTime
      bResultWeb := True



    Case '5'

      bShowLine := false


      // analoger Handle
      if (isAna(iHandle)) Then
   
        if (GetRealActValue(iHandle) > 0.0) Then
          bShowLine := true
        Endif 
 
      else
   
        if (GetActBit(iHandle)) Then
          bShowLine := true
        Endif 
 
      EndIf



      Append Page, '<Script>'
      if (bShowLine) Then
        Append Page, '  $("#' + sBild + '").fadeIn();'
      else
        Append Page, '  $("#' + sBild + '").fadeOut();'
      EndIf

      Append Page, '</Script>'
		


      bResultWeb := True





    Case '8'

      // analoger Handle
      if (isAna(iHandle) = True) Then
        Append Page,  sVal(GetRealActValueAsString(iHandle))
      // digitaler Handle
      else
        Append Page, PrioToString(GetActPrio(iHandle))
      EndIf
    
      bResultWeb := True



    Case '9'

      Append Page, 'Siri/Alexa Schnittstelle'




    Case '10'

      SMessageVar := GetMessageVar(sCol00)
      Append Page, SMessageVar
      bResultWeb := True


    Case '11'
     
      iCountFaults := ival(GetMessageVar('sCountFaults'))
      SetMessageVar 'sLastRequest', sval(now)

      // Störungen vorhanden
      if (iCountFaults > 0) then

        Append Page, '<div class="w3-border-orange w3-border-bottom w3-transparent w3-small" style="margin:2px">' + sval(iCountFaults) + '</div>'

        Append Page, '<Script>'
        Append Page, '  $("#DIVCollectFaults").fadeIn()'
        Append Page, '</Script>'

        // keine Störungen
      else

        Append Page, '<Script>'
        Append Page, '  $("#DIVCollectFaults").hide()'
        Append Page, '</Script>'

      Endif
		  
      bResultWeb := True




    Case '12'
	
      sTempQuelle := GetComment(iHandle) + ' (' + GetRealActValueAsString(iHandle) + ' ' + GetAnaUnit(iHandle) + ')'
      sTempDest01 := GetComment(ival(sCol00)) + ' (' + GetRealActValueAsString(ival(sCol00)) + ' ' + GetAnaUnit(ival(sCol00)) + ')'
      sTempDest02 := GetComment(ival(sCol01)) + ' (' + GetRealActValueAsString(ival(sCol01)) + ' ' + GetAnaUnit(ival(sCol01)) + ')'
	  
      if (isHandle(ival(sCol02))) then
        sTempDest03 := GetComment(ival(sCol02)) + ' (' + GetRealActValueAsString(ival(sCol02)) + ' ' + GetAnaUnit(ival(sCol02)) + ')'
      Endif
	  	

      Append Page, '<Script>'

      Append Page, 'function refresh' + sBild + ' () {'

      Append Page, '    data' + sBild + '.setCell(0, 0, ' + #39 + sTempQuelle + #39 + ');'
      Append Page, '    data' + sBild + '.setCell(0, 1, ' + #39 + sTempDest01 + #39 + ');'

      if (GetRealActValue(ival(sCol00)) > 0) then 
        Append Page, '    data' + sBild + '.setCell(0, 2, ' + sval(GetRealActValue(ival(sCol00))) + ');'
      else
        Append Page, '    data' + sBild + '.setCell(0, 2, 0.1);'
      endif

      Append Page, '    data' + sBild + '.setCell(1, 0, ' + #39 + sTempQuelle + #39 + ');'
      Append Page, '    data' + sBild + '.setCell(1, 1, ' + #39 + sTempDest02 + #39 + ');'
      if (GetRealActValue(ival(sCol01)) > 0) then 
        Append Page, '    data' + sBild + '.setCell(1, 2, ' + sval(GetRealActValue(ival(sCol01))) + ');'
      else
        Append Page, '    data' + sBild + '.setCell(1, 2, 0.1);'
      endif

      Append Page, '    data' + sBild + '.setCell(2, 0, ' + #39 + sTempQuelle + #39 + ');'
      Append Page, '    data' + sBild + '.setCell(2, 1, ' + #39 + sTempDest03 + #39 + ');'
      if (GetRealActValue(ival(sCol02)) > 0) then 
        Append Page, '    data' + sBild + '.setCell(2, 2, ' + sval(GetRealActValue(ival(sCol02))) + ');'
      else
        Append Page, '    data' + sBild + '.setCell(2, 2, 0.1);'
      endif

      Append Page, '  chart' + sBild + '.draw(data' + sBild + ', options' + sBild + ');'

      Append Page, ' }'

      Append Page, '  refresh' + sBild +'();'

      Append Page, '</Script>'



      Append Page, ''

      bResultWeb := True

	

    // Wert als Text zurück
    else

      sActPrio    := GetSwitchPrioText(iHandle)
      aKonfig     := GetKonfig(iHandle)
      iFlag       := iVal(aKonfig.Flags)
      bDGLT       := isBit2(iFlag)
      iStoerPrio  := GetActPrio(iHandle)

      GetProcessData(sConnect, iHandle, 'Enabled')

      if (sConnect = 'FALSE') Then
        Append Page,  '<a class="w3-opacity-max">'
      else
		
        if (iStoerPrio > 63) Then
          Append Page,  '<a class="w3-bottombarsmall w3-border-red">'
        else
			
          // GLT (nicht dauer GLT)
          if (sActPrio = 'GLT') and (bDGLT = False) Then
            Append Page,  '<a style="color:#' + sColGLT +';">'
          EndIf
				
        EndIf

      EndIf

      // analoger Handle
      if (isAna(iHandle) = True) Then
        Append Page,  sVal(GetRealActValueAsString(iHandle)) + ' ' + GetAnaUnit(iHandle)
        bResultWeb := True
      // digitaler Handle
      else
        Append Page, PrioToString(GetActPrio(iHandle))
        bResultWeb := True
      EndIf

  EndSelect

  // evtl. das noch umschreiben und eine genauen Fehler ausgeben
  if not bResultWeb Then
    Append Page, '--'
  EndIf

EndProc

;EOF
